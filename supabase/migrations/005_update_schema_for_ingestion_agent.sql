-- Migration: Update schema to match IngestionAgent expectations
-- This migration adds missing fields and makes necessary fields nullable

-- Update sources table to add fields expected by ingestionAgent
ALTER TABLE sources 
ADD COLUMN IF NOT EXISTS slug TEXT UNIQUE,
ADD COLUMN IF NOT EXISTS adapter_name TEXT,
ADD COLUMN IF NOT EXISTS priority INTEGER DEFAULT 0;

-- Create index on slug for performance
CREATE INDEX IF NOT EXISTS idx_sources_slug ON sources(slug);
CREATE INDEX IF NOT EXISTS idx_sources_active_priority ON sources(is_active, priority);

-- Update stories table to make fields nullable as needed by ingestionAgent
ALTER TABLE stories 
ALTER COLUMN content DROP NOT NULL,
ALTER COLUMN published_at DROP NOT NULL;

-- Add comment to clarify metadata field mapping
COMMENT ON COLUMN stories.original_metadata IS 'Maps to ParsedItem.original_metadata from adapters';
COMMENT ON COLUMN stories.tagging_metadata IS 'Generated by classification/tagging agents';

-- Update the unique constraint to work with external_id properly
ALTER TABLE stories DROP CONSTRAINT IF EXISTS stories_url_unique;
ALTER TABLE stories DROP CONSTRAINT IF EXISTS stories_external_id_source_unique;

-- Add proper constraints
ALTER TABLE stories ADD CONSTRAINT stories_external_id_source_unique 
    UNIQUE (external_id, source_id);

-- Add index for better performance on common queries
CREATE INDEX IF NOT EXISTS idx_stories_source_id ON stories(source_id);
CREATE INDEX IF NOT EXISTS idx_stories_published_at ON stories(published_at DESC);
CREATE INDEX IF NOT EXISTS idx_stories_category ON stories(story_category);
CREATE INDEX IF NOT EXISTS idx_stories_embedding ON stories USING ivfflat (embedding vector_cosine_ops) WITH (lists = 100);

-- Add trigger to automatically update embedding_generated_at when embedding is set
CREATE OR REPLACE FUNCTION update_embedding_timestamp()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.embedding IS NOT NULL AND OLD.embedding IS NULL THEN
        NEW.embedding_generated_at = NOW();
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_update_embedding_timestamp
    BEFORE UPDATE ON stories
    FOR EACH ROW
    EXECUTE FUNCTION update_embedding_timestamp(); 